{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for Fiber",
        "title": "Fiber Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login_request.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid login credentials",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    }
                }
            }
        },
        "/movie": {
            "post": {
                "description": "Create movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Create movie",
                "parameters": [
                    {
                        "description": "Movie",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateMovieRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Netflix"
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    }
                }
            }
        },
        "/movie/{id}": {
            "get": {
                "description": "Returns movie from db by movieID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movie",
                "parameters": [
                    {
                        "maxLength": 24,
                        "minLength": 24,
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Netflix"
                        }
                    },
                    "400": {
                        "description": "Invalid object ID",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates movie filed watched to true",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid Object ID",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes movie from db by movieID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Delete movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid Object ID",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "description": "Returns all movies from db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Netflix"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register user in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_request.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "422": {
                        "description": "Validation failed",
                        "schema": {
                            "$ref": "#/definitions/message.Msg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "login_request.Request": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "message.Msg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Netflix": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "leadrole": {
                    "type": "string"
                },
                "movie": {
                    "type": "string"
                },
                "watched": {
                    "type": "boolean"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "requests.CreateMovieRequest": {
            "type": "object",
            "required": [
                "leadrole",
                "movie",
                "watched",
                "year"
            ],
            "properties": {
                "leadrole": {
                    "type": "string"
                },
                "movie": {
                    "type": "string"
                },
                "watched": {
                    "type": "boolean"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "user_request.UserRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "_id": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}