basePath: /
definitions:
  login_request.Request:
    properties:
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  message.Msg:
    properties:
      message:
        type: string
    type: object
  model.Netflix:
    properties:
      _id:
        type: string
      leadrole:
        type: string
      movie:
        type: string
      watched:
        type: boolean
      year:
        type: integer
    type: object
  requests.CreateMovieRequest:
    properties:
      leadrole:
        type: string
      movie:
        type: string
      watched:
        type: boolean
      year:
        type: integer
    required:
    - leadrole
    - movie
    - watched
    - year
    type: object
  user_request.UserRequest:
    properties:
      _id:
        type: string
      firstname:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:3000
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login_request.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid login credentials
          schema:
            $ref: '#/definitions/message.Msg'
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/message.Msg'
      summary: Login user
      tags:
      - users
  /movie:
    post:
      consumes:
      - application/json
      description: Create movie
      parameters:
      - description: Movie
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMovieRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Netflix'
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/message.Msg'
      summary: Create movie
      tags:
      - movies
  /movie/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes movie from db by movieID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Object ID
          schema:
            $ref: '#/definitions/message.Msg'
      summary: Delete movie
      tags:
      - movies
    get:
      consumes:
      - application/json
      description: Returns movie from db by movieID
      parameters:
      - description: Movie ID
        in: path
        maxLength: 24
        minLength: 24
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Netflix'
        "400":
          description: Invalid object ID
          schema:
            $ref: '#/definitions/message.Msg'
      summary: Get movie
      tags:
      - movies
    put:
      consumes:
      - application/json
      description: Updates movie filed watched to true
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid Object ID
          schema:
            $ref: '#/definitions/message.Msg'
      summary: Update movie
      tags:
      - movies
  /movies:
    get:
      consumes:
      - application/json
      description: Returns all movies from db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Netflix'
            type: array
      summary: Get movies
      tags:
      - movies
  /register:
    post:
      consumes:
      - application/json
      description: Register user in database
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user_request.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "422":
          description: Validation failed
          schema:
            $ref: '#/definitions/message.Msg'
      summary: Register user
      tags:
      - users
swagger: "2.0"
